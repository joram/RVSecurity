{"version":3,"sources":["Sophie2.svg","SVGDiagram.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","__webpack_require__","p","SVGDiagram","props","filename","var1","var2","var3","var4","var5","var6","var7","var8","var9","var10","var11","var12","_React$useState","React","useState","_React$useState2","Object","slicedToArray","svgText","setSvgText","replacements","fetch","then","r","text","svg","forEach","_ref","_ref2","from","to","replace","console","log","react_default","a","createElement","className","esm","src","App","_useState","_useState2","data","setData","useEffect","interval","setInterval","headers","Content-Type","Accept","response","json","myJson","clearInterval","src_SVGDiagram","Sophie","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4ecb3f28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sophie2.05141164.svg\";","import React from \"react\";\nimport './App.css';\nimport SVG from 'react-inlinesvg';\n\n\nfunction SVGDiagram(props) {\n    let {filename, var1, var2, var3, var4, var5, var6, var7, var8, var9, var10, var11, var12} = props\n    let [svgText, setSvgText] = React.useState( null);\n\n    let replacements = [\n        [\"{var1}\", var1],\n        [\"{var2}\", var2],\n        [\"{var3}\", var3],\n        [\"{var4}\", var4],\n        [\"{var5}\", var5],\n        [\"{var6}\", var6],\n        [\"{var7}\", var7],\n        [\"{var8}\", var8],\n        [\"{var9}\", var9],\n        [\"{var10}\", var10],\n        [\"{var11}\", var11],\n        [\"{var12}\", var12],\n    ]\n    if(svgText=== null) {\n        fetch(filename)\n            .then(r => r.text())\n            .then(text => {\n                setSvgText(text)\n            })\n    }\n\n    let svg = svgText\n    if(svgText!== null) {\n        replacements.forEach(([from, to]) => {\n            svg = svg.replace(from, to);\n        })\n    }\n\n    console.log(svg)\n    return (\n        <div className=\"App\">\n            <SVG src={svg}/>\n        </div>\n    )\n}\n\nexport default SVGDiagram;\n","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport Sophie from \"./Sophie2.svg\";\nimport SVGDiagram from \"./SVGDiagram\";\n\n\nfunction App() {\n    let [data, setData] = useState({});\n    const getData=()=>{\n        fetch('http://localhost:8000/data'\n        ,{\n          headers : {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           }\n        }\n        )\n          .then(function(response){\n            return response.json();\n          })\n          .then(function(myJson) {\n            setData(myJson)\n          });\n  }\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        getData();\n\n      }, 300);\n      return () => clearInterval(interval);\n    }, [])\n\n        console.log('Logs every 0.5s', data);\n    return (\n        <div className=\"App\">\n            <SVGDiagram\n                filename={Sophie}\n                var1={data.var1}\n                var2={data.var2}\n                var3={data.var3}\n                var4={data.var4}\n                var5={data.var5}\n                var6={data.var6}\n                var7={data.var7}\n                var8={data.var8}\n                var9={data.var9}\n                var10={data.var10}\n                var11={data.var11}\n                var12={data.var12}\n            />\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}